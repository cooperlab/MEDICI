function Mapping = StringMatch(A, B, Hash)
%Maps strings in cell array 'A' to strings in cell array 'B'.
%inputs:
%A - N-length cell array of strings.
%B - M-length cell array of strings.
%Hash - (optional) hash table generated by GenerateHash.m.
%outputs:
%Mapping - N-length cell array of int vectors. The i'th cell 
%contains the corresponding indices of 'B' containing strings
%that match the i'th cell of 'A'.

%Licensed to the Apache Software Foundation (ASF) under one
%or more contributor license agreements.  See the NOTICE file
%distributed with this work for additional information
%regarding copyright ownership.  The ASF licenses this file
%to you under the Apache License, Version 2.0 (the
%"License"); you may not use this file except in compliance
%with the License.  You may obtain a copy of the License at
%
%  http://www.apache.org/licenses/LICENSE-2.0
%
%Unless required by applicable law or agreed to in writing,
%software distributed under the License is distributed on an
%"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
%KIND, either express or implied.  See the License for the
%specific language governing permissions and limitations
%under the License.

%create java hashtable
if(nargin == 2)
    Hash = GenerateHash(B);
end

%initialize output
Mapping = cell(1, length(A));

%Get mapping from 'A' items to 'B' items
for i = 1:length(A)
    
    %recover mapped indices
    Item = Hash.get(A{i});
    if(size(Item,1) > size(Item,2))
        Item = Item.';
    end
    Mapping{i} = Item;
    
end
